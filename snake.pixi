ширина=WINDOW_XSIZE
высота=WINDOW_YSIZE
Х_координата_кубика=35
У_координата_кубика=35
ширина_кубика=10
высота_кубика=10
прирост_по_Х=0
прирост_по_У=10
счет_игры=0
левый_верх_Х= (-1*ширина/2) + 45
левый_верх_У= (-1*высота/2)+15

метка0:
clear(BLACK) 

fbox(0,0,15,15,#66ff33 )

get_event()

if( EVT[ EVT_TYPE ] == EVT_QUIT ) // выход
 { goto exit1 } 

if (EVT[ EVT_KEY ] == KEY_UP ) // клавиша вверх
    {  прирост_по_У= -10 прирост_по_Х=0 }

if (EVT[ EVT_KEY ] == KEY_DOWN ) // клавиша вниз
    {  прирост_по_У= 10 прирост_по_Х=0 }

if (EVT[ EVT_KEY ] == KEY_LEFT ) // клавиша влево
    {  прирост_по_У= 0 прирост_по_Х=-10 }

if (EVT[ EVT_KEY ] == KEY_RIGHT ) // клавиша вправо
    {  прирост_по_У= 0 прирост_по_Х=10 }

    fbox( Х_координата_кубика, У_координата_кубика ,ширина_кубика,высота_кубика, #222222 ) // его тень 
	  Х_координата_кубика = Х_координата_кубика + прирост_по_Х
    У_координата_кубика = У_координата_кубика + прирост_по_У
    fbox( Х_координата_кубика, У_координата_кубика ,ширина_кубика,высота_кубика, #ffff00 ) // сам кубик
	
if ( Х_координата_кубика > -10 && Х_координата_кубика < 10 && У_координата_кубика > -10 && У_координата_кубика < 10)
  { счет_игры=счет_игры+1 } 

ScoreBox(левый_верх_Х,левый_верх_У,счет_игры)

EVT[ EVT_KEY ] = KEY_UNKNOWN 

  if ( Х_координата_кубика < -1*ширина/2 )
      { прирост_по_Х = 10 }
  if ( У_координата_кубика < -1*высота/2 )
      { прирост_по_У = 10 }  
  if ( Х_координата_кубика > ширина/2-ширина_кубика )
      { прирост_по_Х = -10 }
  if ( У_координата_кубика > высота/2-ширина_кубика )
      { прирост_по_У = -10 } 


	frame(100)
	


goto  метка0

fn ScoreBox($x,$y,$score)
{

  $asd=$x+100
  $gsfsdf=$y+50

  $x=$x-40   $y=$y-8  // поправка на размер прямоугольника 80х16, который рисуется от левого верхнего края
  $r=0 // красный
  $g=0 // зелённый
  $b=254  // синий
  fbox($x,$y,100,16,get_color($r,$g,$b)) // рисуем прямоугольник
  print("score :",$x+40,$y+8)      // записываем координаты х и у
  print(n2s($score),$x+85,$y+8)      // команда floor() округляет до целого
}

 // берёт число возврат-строка
fn n2s( $n )
 {
  $s=""
  num2str( $s, $n )
  ret( $s)
 } 

exit1:

